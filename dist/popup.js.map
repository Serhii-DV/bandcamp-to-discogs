{"version":3,"file":"popup.js","mappings":"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","sources":["webpack:///./node_modules/uuid/dist/esm-browser/stringify.js","webpack:///./node_modules/uuid/dist/esm-browser/regex.js","webpack:///./node_modules/uuid/dist/esm-browser/parse.js","webpack:///./node_modules/uuid/dist/esm-browser/validate.js","webpack:///./node_modules/uuid/dist/esm-browser/sha1.js","webpack:///./node_modules/uuid/dist/esm-browser/v5.js","webpack:///./node_modules/uuid/dist/esm-browser/v35.js","webpack:///./src/modules/key-generator.js","webpack:///./src/app/trackTime.js","webpack:///./src/app/release.js","webpack:///./src/modules/utils.js","webpack:///./src/modules/chrome.js","webpack:///./src/discogs/modules/genres.js","webpack:///./src/bandcamp/modules/mapping.js","webpack:///./src/config.js","webpack:///./src/bandcamp/modules/bandcamp.js","webpack:///./src/discogs/app/utils.js","webpack:///./src/discogs/modules/discogs.js","webpack:///./src/discogs/app/metadata.js","webpack:///./src/discogs/app/discogs-csv.js","webpack:///./src/modules/html.js","webpack:///./src/popup/components/releases-list.js","webpack:///./src/modules/csv.js","webpack:///./src/modules/storage.js","webpack:///./src/popup/helpers.js","webpack:///./src/popup/tabs/history_tab.js","webpack:///./src/popup/tabs/download_tab.js","webpack:///./src/popup/tabs/releases_tab.js","webpack:///./src/popup/tabs/release_tab.js","webpack:///./src/popup/tabs/csv_data_tab.js","webpack:///./src/utils/console.js","webpack:///./src/popup/console.js","webpack:///./src/popup/popup.js","webpack:///./src/bandcamp/modules/html.js"],"sourcesContent":["import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;","import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","import { v5 as uuid5} from 'uuid';\nimport { Release } from '../app/release.js';\n\n/**\n * @param {String} url\n * @returns {String}\n */\nexport function generateKeyForUrl(url) {\n  const uuid = uuid5(url, uuid5.URL);\n  // console.log(`B2D: uuid5(${url}): `, uuid);\n  return uuid;\n}\n\n/**\n * @param {ReleaseItem} releaseItem\n * @return {String}\n */\nexport function generateKeyForReleaseItem(releaseItem) {\n  return generateKeyForUrl(releaseItem.url);\n}\n\n/**\n * @param {Release} release\n * @return {String}\n */\nexport function generateKeyForRelease(release) {\n  return generateKeyForReleaseItem(release.releaseItem);\n}\n\nexport function generateKeysFromUrls(urls) {\n  const keys = [];\n  urls.forEach(url => keys.push(generateKeyForUrl(url)));\n  return keys;\n}\n\nexport function generateKeyUrlMapFromUrls(urls) {\n  const keyUrlMap = {};\n\n  urls.forEach(url => {\n    const key = generateKeyForUrl(url);\n    keyUrlMap[key] = url;\n  });\n\n  return keyUrlMap;\n}\n","class TrackTime {\n  /**\n   * @type {Number}\n   */\n  #hours;\n\n  /**\n   * @type {Number}\n   */\n  #minutes;\n\n  /**\n   * @type {Number}\n   */\n  #seconds;\n\n  /**\n   * Constructs a Time object with hours, minutes, and seconds.\n   * @param {number} hours - The hours component of the time.\n   * @param {number} minutes - The minutes component of the time.\n   * @param {number} seconds - The seconds component of the time.\n   */\n  constructor(hours, minutes, seconds) {\n      this.#hours = hours;\n      this.#minutes = minutes;\n      this.#seconds = seconds;\n  }\n\n  get value() {\n    return this.toString();\n  }\n\n  get date() {\n    return this.toDate();\n  }\n\n  /**\n   * Returns a string representation of the duration in the format \"HH:MM:SS\".\n   * @returns {string} String representation of the duration.\n   */\n  toString() {\n    const formatter = new Intl.DateTimeFormat('en', {\n      hour12: false,\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n    });\n\n    return formatter.format(this.toDate());\n  }\n\n  toDate() {\n    const date = new Date(0);\n    date.setHours(this.#hours);\n    date.setMinutes(this.#minutes);\n    date.setSeconds(this.#seconds);\n\n    return date;\n  }\n\n  /**\n   * Parses a time string in the format HH:MM:SS and returns an object with hours, minutes, and seconds.\n   * Throws an error if the input string is not in the valid time format.\n   *\n   * @param {string} timeString - The time string to parse, expected in the format HH:MM:SS.\n   * @returns {TrackTime} A Time object containing the parsed hours, minutes, and seconds as numbers.\n   * @throws {Error} Throws an error if the input string is not in the valid time format HH:MM:SS.\n   */\n  static fromString(timeString) {\n    // Regular expression to match HH:MM:SS format\n    const timeFormat = /^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)$/;\n\n    if (!timeFormat.test(timeString)) {\n        throw new Error(\"Invalid time format. Please use HH:MM:SS.\");\n    }\n\n    const [hours, minutes, seconds] = timeString.split(':');\n\n    return new TrackTime(\n      parseInt(hours, 10),\n      parseInt(minutes, 10),\n      parseInt(seconds, 10)\n    );\n  }\n\n  /**\n   * Creates a Duration instance from a duration string.\n   * The duration string should be in the format \"XHYMZS\",\n   * where X is hours, Y is minutes, and Z is seconds.\n   * See: https://en.wikipedia.org/wiki/ISO_8601\n   * @param {string} duration\n   * @returns {TrackTime}\n   */\n  static fromDuration(duration) {\n    const regexHours = /(\\d+)H/;\n    const regexMinutes = /(\\d+)M/;\n    const regexSeconds = /(\\d+)S/;\n    const hours = (regexHours.exec(duration) || [])[1] || 0;\n    const minutes = (regexMinutes.exec(duration) || [])[1] || 0;\n    const seconds = (regexSeconds.exec(duration) || [])[1] || 0;\n\n    return new TrackTime(\n      parseInt(hours, 10),\n      parseInt(minutes, 10),\n      parseInt(seconds, 10)\n    );\n  }\n}\n\nexport default TrackTime;\n","import { generateKeyForUrl } from '../modules/key-generator.js';\nimport TrackTime from './trackTime.js';\n\nexport class ReleaseItem {\n  constructor(url, artist, title) {\n    this.url = url;\n    this.artist = artist;\n    this.title = title;\n    this.uuid = generateKeyForUrl(url);\n  }\n\n  static fromObject(obj) {\n    return new ReleaseItem(obj.url, obj.artist, obj.title);\n  }\n}\n\nexport class Release {\n  /**\n   * @type {ReleaseItem}\n   */\n  releaseItem;\n\n  /**\n   * @type {string}\n   */\n  label;\n\n  /**\n   * @type {Date}\n   */\n  published;\n\n  /**\n   * @type {Date}\n   */\n  modified;\n\n  /**\n   * @type {Array.<Track>}\n   */\n  tracks;\n\n  /**\n   * @type {Number}\n   */\n  tracksQty;\n\n  /**\n   * @type {string}\n   */\n  image;\n\n  /**\n   * @type {Array.<string>}\n   */\n  keywords;\n\n  /**\n   * @param {string} artist\n   * @param {string} title\n   * @param {string} label\n   * @param {Date} datePublished\n   * @param {Date} dateModified\n   * @param {Array.<Track>} tracks\n   * @param {string} url\n   * @param {string} image\n   * @param {Array.<string>} keywords\n   */\n  constructor(artist, title, label, datePublished, dateModified, tracks, url, image, keywords) {\n    this.releaseItem = new ReleaseItem(url, artist, title);\n    this.label = label;\n    this.published = datePublished;\n    this.modified = dateModified;\n    this.tracks = tracks;\n    this.tracksQty = tracks.length;\n    this.image = image;\n    this.keywords = keywords;\n  }\n\n  get artist() {\n    return this.releaseItem.artist;\n  }\n\n  get url() {\n    return this.releaseItem.url;\n  }\n\n  get title() {\n    return this.releaseItem.title;\n  }\n\n  toStorageObject() {\n    return {\n      uuid: this.releaseItem.uuid,\n      artist: this.releaseItem.artist,\n      title: this.releaseItem.title,\n      url: this.releaseItem.url,\n      label: this.label,\n      published: this.published.toISOString(),\n      modified: this.modified.toISOString(),\n      tracks: this.tracks.map(track => track.toStorageObject()),\n      image: this.image,\n      keywords: this.keywords\n    };\n  }\n\n  /**\n   * Create an instance of the Release class from the object.\n   * @param {Object} obj - A simple object.\n   * @returns {Release} An instance of the Release class.\n   */\n  static fromStorageObject(obj) {\n    if (!obj.url || !obj.tracks) {\n      throw new Error('Cannot create Release object from object', obj);\n    }\n\n    const tracks = obj.tracks.map(trackData => Track.fromStorageObject(trackData));\n\n    if (!obj.published && !obj.date) {\n      throw new Error(\"Missing published or date property\");\n    }\n\n    if (!obj.modified && !obj.date) {\n      throw new Error(\"Missing published or date property\");\n    }\n\n    return new Release(\n      obj.artist,\n      obj.title,\n      obj.label,\n      new Date(obj.published ?? obj.date),\n      new Date(obj.modified ?? obj.date),\n      tracks,\n      obj.url,\n      obj.image,\n      obj.keywords\n    );\n  }\n}\n\nexport class Track {\n  /**\n   * @type {String}\n   */\n  num;\n\n  /**\n   * @type {String}\n   */\n  title;\n\n  /**\n   * @type {TrackTime}\n   */\n  time;\n\n  /**\n   * @param {String} num\n   * @param {String} title\n   * @param {TrackTime} time\n   */\n  constructor(num, title, time) {\n    this.num = num;\n    this.title = title;\n    this.time = time;\n  }\n\n  toStorageObject() {\n    return {\n      num: this.num,\n      title: this.title,\n      time: this.time.value\n    };\n  }\n\n  /**\n   * Create an instance of the Track class from the object.\n   * @param {Object} obj - A simple object.\n   * @returns {Track} An instance of the Track class.\n   */\n  static fromStorageObject(obj) {\n    return new Track(\n      obj.num,\n      obj.title,\n      TrackTime.fromString(obj.time || obj.duration)\n    );\n  }\n}\n","/**\n * @param {String} string\n * @param {String} pad\n * @param {Number} length\n * @returns {String}\n */\nexport function padStringLeft(string, pad, length) {\n  const padding = string.length >= length ? '' : pad.repeat(length - string.length);\n  return padding + string;\n}\n\n/** @see https://stackoverflow.com/a/8485137/3227570 */\nexport function safeFilename(value) {\n  return transliterate(value).replace(/[^a-zA-Z0-9]/gi, '_').toLowerCase();\n}\n\n/** @see https://stackoverflow.com/a/11404121 */\nconst transliterationMap = {\n  \"Ё\": \"YO\", \"Й\": \"I\", \"Ц\": \"TS\", \"У\": \"U\", \"К\": \"K\", \"Е\": \"E\", \"Н\": \"N\", \"Г\": \"G\", \"Ш\": \"SH\", \"Щ\": \"SCH\", \"З\": \"Z\", \"Х\": \"H\", \"Ъ\": \"'\", \"ё\": \"yo\", \"й\": \"i\", \"ц\": \"ts\", \"у\": \"u\", \"к\": \"k\", \"е\": \"e\", \"н\": \"n\", \"г\": \"g\", \"ш\": \"sh\", \"щ\": \"sch\", \"з\": \"z\", \"х\": \"h\", \"ъ\": \"'\", \"Ф\": \"F\", \"Ы\": \"I\", \"В\": \"V\", \"А\": \"A\", \"П\": \"P\", \"Р\": \"R\", \"О\": \"O\", \"Л\": \"L\", \"Д\": \"D\", \"Ж\": \"ZH\", \"Э\": \"E\", \"ф\": \"f\", \"ы\": \"i\", \"в\": \"v\", \"а\": \"a\", \"п\": \"p\", \"р\": \"r\", \"о\": \"o\", \"л\": \"l\", \"д\": \"d\", \"ж\": \"zh\", \"э\": \"e\", \"Я\": \"Ya\", \"Ч\": \"CH\", \"С\": \"S\", \"М\": \"M\", \"И\": \"I\", \"Т\": \"T\", \"Ь\": \"'\", \"Б\": \"B\", \"Ю\": \"YU\", \"я\": \"ya\", \"ч\": \"ch\", \"с\": \"s\", \"м\": \"m\", \"и\": \"i\", \"т\": \"t\", \"ь\": \"'\", \"б\": \"b\", \"ю\": \"yu\"\n};\n\nfunction transliterate(word) {\n  return Array.from(word).map(char => transliterationMap[char] || char).join(\"\");\n}\n\n/** @see https://flexiple.com/javascript/javascript-capitalize-first-letter/ */\nexport function capitalizeEachWord(str) {\n  const words = str.split(\" \");\n\n  const capitalizedWords = words.map(word => {\n    const firstLetter = word.charAt(0).toUpperCase();\n    const restOfWord = word.slice(1);\n    return `${firstLetter}${restOfWord}`;\n  });\n\n  return capitalizedWords.join(\" \");\n}\n\nexport function convertToAlias(str) {\n  const slug = str.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n  const trimmedSlug = slug.replace(/^-+|-+$/g, '');\n  return trimmedSlug;\n}\n\nexport function isEmptyObject(obj) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isString(value) {\n  return typeof value === 'string';\n}\n\nexport function isObject(value) {\n  return Object.prototype.toString.call(value) === '[object Object]';\n}\n\nexport function isArray(value) {\n  return Array.isArray(value);\n}\n\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\n\n/**\n * @param {Array} value\n * @returns {Boolean}\n */\nexport function isEmptyArray(value) {\n  return !isArray(value) || value.length === 0;\n}\n\n/**\n * @param {Array<Array<String>>}\n * @return {Array<String>}\n */\nexport function arrayToFlat(arr) {\n  return [].concat(...arr);\n}\n\n/**\n * @param {Array<Array<String>|String>}\n * @return {Array<String>}\n */\nexport function arrayUnique(arr) {\n  return [...new Set(arrayToFlat(arr))];\n}\n\n/**\n * @param {Element} element\n * @param {String} className\n * @returns {Boolean}\n */\nexport function hasClass(element, className) {\n  return element.classList.contains(className);\n}\n\n/**\n * @param {String} url\n * @param {Element} targetElement\n * @returns {Promise}\n */\nexport function loadHTMLContent(url, targetElement) {\n  return fetch(url)\n      .then(response => response.text())\n      .then(htmlContent => {\n          targetElement.innerHTML = htmlContent;\n          return targetElement;\n      })\n      .catch(error => console.error('Error loading HTML content:', error));\n}\n\n/**\n * Replace tokens in a template string with their corresponding values.\n * @param {string} template - The template string with tokens to be replaced.\n * @param {object} replacements - An object containing key-value pairs for replacements.\n * @returns {string} - The template string with tokens replaced by their values.\n */\nexport function replaceTokens(template, replacements) {\n  for (const key in replacements) {\n    if (replacements.hasOwnProperty(key)) {\n      template = template.replace(`{${key}}`, replacements[key]);\n    }\n  }\n  return template;\n}\n\n/**\n * @param {String} inputString\n * @param {RegExp|String} delimiters\n * @returns {Array}\n */\nexport function splitString(inputString, delimiters) {\n  const resultArray = inputString.split(delimiters);\n  return resultArray\n    .map(item => item.trim())\n    .filter(item => item !== '');\n}\n\nexport function containsOneOf(string1, arrayOfStrings) {\n  // This function checks if a string contains one of the strings in an array of strings.\n\n  // Args:\n  //   string1: The string to check.\n  //   arrayOfStrings: The array of strings to look for.\n\n  // Returns:\n  //   True if string1 contains one of the strings in arrayOfStrings, False otherwise.\n\n  for (const string2 of arrayOfStrings) {\n    if (string1.includes(string2)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function countOccurrences(arr) {\n  const count = new Map();\n  const items = new Map();\n  const result = [];\n\n  // Count occurrences of each element in the array\n  for (const item of arr) {\n      const key = item.toLowerCase();\n\n      if (!items.has(key)) {\n        items.set(key, item);\n      }\n\n      count.set(key, (count.get(key) || 0) + 1);\n  }\n\n  for (const [key, item] of items) {\n    const value = count.get(key);\n    if (value > 1) {\n      result.push(`${item} (${value})`);\n    } else {\n      result.push(item);\n    }\n  }\n\n  return result;\n}\n\nexport function removeBrackets(inputString) {\n  // Use a regular expression to remove the brackets and their contents\n  return inputString.replace(/\\s*\\([^)]*\\)/, '');\n}\n\nexport function trimCharactersFromString(inputString, charactersToTrim) {\n  // Escape special characters within the provided string and construct the regex pattern\n  const escapedCharacters = charactersToTrim.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  const regexPattern = new RegExp(`^[${escapedCharacters}]+|[${escapedCharacters}]+$`, 'g');\n  const trimmedString = inputString.replace(regexPattern, '');\n\n  return trimmedString;\n}\n\nexport function removeInvisibleChars(inputString) {\n  // Define the invisible character(s) you want to remove (for example, non-breaking space)\n  const invisibleCharsRegex = /[\\u200B-\\u200D\\uFEFF\\u200E\\u200F\\u202A-\\u202E]|&lrm;/g;\n  // Use the regular expression to remove invisible characters\n  const cleanedString = inputString.replace(invisibleCharsRegex, '');\n\n  return cleanedString;\n}\n\nexport function bytesToSize(bytes) {\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n\n  if (bytes === 0) return '0 Byte';\n\n  const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n  return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n}\n\nexport function removeLeadingZeroOrColon(str) {\n  // Use a regular expression to match leading zeros or colons\n  // and replace them with an empty string\n  return str.replace(/^(:|0)*/, '');\n}\n\nexport const camelCaseToReadable = (str) => {\n  // Replace each uppercase letter with a space and that letter in lowercase\n  let result = str.replace(/([a-z])([A-Z])/g, '$1 $2');\n  // Capitalize the first letter of the resulting string\n  result = result.charAt(0).toUpperCase() + result.slice(1);\n  return result;\n}\n\nexport const convertNewlinesToBreaks = (str) => {\n  return str.replace(/\\n/g, '<br>');\n}\n","import { isFunction } from \"./utils.js\";\n\nexport async function getCurrentTab(callback) {\n  let queryOptions = { active: true, currentWindow: true };\n  let [tab] = isFunction(callback)\n    ? await chrome.tabs.query(queryOptions, callback)\n    : await chrome.tabs.query(queryOptions);\n  return tab;\n};\n\nexport function getExtensionManifest() {\n  const manifest = chrome.runtime.getManifest();\n  return manifest;\n}\n\nexport async function openTabs(urls, callback) {\n  const tabPromises = [];\n\n  for (const url of urls) {\n    const tabPromise = new Promise((resolve) => {\n      chrome.tabs.create({ url, active: false }, (tab) => {\n        if (callback) {\n          callback(tab);\n        }\n        resolve(tab);\n      });\n    });\n\n    tabPromises.push(tabPromise);\n  }\n\n  return Promise.all(tabPromises);\n}\n\nexport function getExtensionUrl(path) {\n  return chrome.runtime.getURL(path);\n}\n\nexport const chromeSendMessageToCurrentTab = (message, responseCallback) => {\n  getCurrentTab().then((tab) => {\n    if (tab) {\n      chrome.tabs.sendMessage(tab.id, message, responseCallback);\n    }\n  });\n}\n","/**\n * @param {String} style\n * @returns {String}\n */\nexport function getGenreByStyle(style) {\n  return getPropertyByElement(genres, style);\n}\n\nlet genres = {};\n\nexport async function loadDiscogsGenres(url) {\n  return fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      genres = data;\n      return genres;\n    }).catch(reason => {\n      genres = {};\n    });\n}\n\nfunction getPropertyByElement(obj, element) {\n  for (const prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      const subGenres = obj[prop];\n      if (subGenres.includes(element)) {\n        return prop;\n      }\n    }\n  }\n  return null; // Element not found\n}\n","import { getGenreByStyle } from \"../../discogs/modules/genres.js\";\nimport { isEmptyObject, isObject, isString } from \"../../modules/utils.js\";\n\nlet mapping = {};\n\nexport function getMapping() {\n  return mapping = isEmptyObject(mapping) ? createMapping(keywordMapping) : mapping;\n}\n\nfunction createMapping(keywordMapping) {\n  const mapping = {};\n\n  for (const key in keywordMapping) {\n    if (keywordMapping.hasOwnProperty(key)) {\n      const value = keywordMapping[key];\n      if (value !== \"\") {\n        mapping[key] = isString(value) ? new Style(value) : value;\n      }\n    }\n  }\n\n  return mapping;\n}\n\nexport class Style {\n  constructor(style) {\n    this.style = style;\n    this._genre = null;\n  }\n\n  get genre() {\n    return this._genre = (isObject(this._genre) ? this._genre : getGenreByStyle(this.style));\n  }\n}\n\nlet keywordMapping = {};\n\nexport async function loadKeywordMapping(url) {\n  return fetch(url)\n    .then(response => response.json())\n    .then(data => {\n      keywordMapping = data;\n      return keywordMapping;\n    }).catch(reason => {\n      keywordMapping = {};\n    });\n}\n","export default {\n  // genres_url: 'https://gist.githubusercontent.com/Serhii-DV/14d7ec13fd15e30db1a2a8dff047abbf/raw/discogs_genres_and_styles.json',\n  genres_url: '../data/discogs_genres.json',\n  // keyword_mapping_url: '../data/keyword_mapping.json',\n  keyword_mapping_url: 'https://gist.githubusercontent.com/Serhii-DV/44181f307548aabac2703147d3c730ba/raw/mapping.json',\n  about_url: '../data/about.html',\n  extension_url: 'https://chrome.google.com/webstore/detail/bandcamp-to-discogs-b2d/hipnkehalkffbdjnbbeoefmoondaciok',\n  discogs_search_artist_url: 'https://www.discogs.com/search?q={artist}&type=artist',\n  discogs_search_release_url: 'https://www.discogs.com/search?q={artist}+{release}&type=release',\n  text: {\n    // Submission notes text\n    notes: 'This draft was created via CSV upload and Bandcamp To Discogs Google Chrome extension {extension_url}\\n\\nRelease url: {release_url}'\n  },\n  discogsApi: {\n    consumerKey: 'TJGtBNerXwCzYvFCQXSD',\n  }\n};\n","import { arrayUnique, isArray, isString } from \"../../modules/utils.js\";\nimport { Style, getMapping } from \"./mapping.js\";\n\n/**\n * @param {String} keyword\n * @returns {Array<String>}\n */\nexport function keywordToDiscogsGenre(keyword) {\n  const keywordMapping = getMapping();\n  const key = keyword.toLowerCase();\n\n  if (key in keywordMapping) {\n    const keywordMapData = keywordMapping[key];\n\n    if (keywordMapData instanceof Style) {\n      return [keywordMapData.genre];\n    }\n\n    if (isArray(keywordMapData)) {\n      return keywordsToDiscogsGenres(keywordMapData);\n    }\n\n    if (isString(keywordMapData)) {\n      return keywordToDiscogsGenre(keywordMapData);\n    }\n  }\n\n  return [];\n}\n\n/**\n * @param {String} keyword\n * @returns {Array<String>}\n */\nexport function keywordToDiscogsStyles(keyword) {\n  const keywordMapping = getMapping();\n  const key = keyword.toLowerCase();\n\n  if (key in keywordMapping) {\n    const keywordMapData = keywordMapping[key];\n\n    if (keywordMapData instanceof Style) {\n      return [keywordMapData.style];\n    }\n\n    if (isArray(keywordMapData)) {\n      return keywordsToDiscogsStyles(keywordMapData);\n    }\n\n    if (isString(keywordMapData)) {\n      return keywordToDiscogsStyles(keywordMapData);\n    }\n  }\n\n  return [];\n}\n\n/**\n * @param {Array<String>} keywords\n * @returns {Array<String>}\n */\nexport function keywordsToDiscogsGenres(keywords) {\n  return arrayUnique(keywords.map(keywordToDiscogsGenre));\n}\n\n/**\n * @param {Array<String>} keywords\n * @returns {Array<String>}\n */\nexport function keywordsToDiscogsStyles(keywords) {\n  return arrayUnique(keywords.map(keywordToDiscogsStyles));\n}\n","/**\n * Returns Discogs formatted date\n * @param {Date} date\n * @returns {String}\n */\nexport const getDiscogsDateValue = date => {\n  return date.toISOString().split('T')[0];\n};\n\nexport const isValidDiscogsReleaseEditUrl = (url) => {\n  const discogsEditUrl = 'www.discogs.com/release/edit/';\n  return url.includes(discogsEditUrl);\n};\n","import { DiscogsCsv } from \"../app/discogs-csv.js\";\nimport { Release } from \"../../app/release.js\";\nimport config from \"../../config.js\";\nimport { replaceTokens } from \"../../modules/utils.js\";\n\n/**\n * @param {Release} release\n * @returns {DiscogsCsv}\n */\nexport function releaseToDiscogsCsv(release) {\n  return DiscogsCsv.fromRelease(release);\n}\n\nexport function getSearchDiscogsArtistUrl(artist) {\n  return replaceTokens(config.discogs_search_artist_url, {artist: encodeURIComponent(artist)});\n}\n\nexport function getSearchDiscogsReleaseUrl(artist, release) {\n  return replaceTokens(config.discogs_search_release_url, {artist: encodeURIComponent(artist), release: encodeURIComponent(release)});\n}\n\n/**\n * @param {String} releaseUrl\n * @returns {String}\n */\nexport function generateSubmissionNotes(releaseUrl) {\n  return replaceTokens(config.text.notes, {\n    extension_url: config.extension_url,\n    release_url: releaseUrl\n  });\n}\n","import { Release } from \"../../app/release.js\";\nimport { keywordsToDiscogsGenres, keywordsToDiscogsStyles } from \"../../bandcamp/modules/bandcamp.js\";\nimport { getExtensionManifest } from \"../../modules/chrome.js\";\nimport { generateSubmissionNotes } from \"../modules/discogs.js\";\nimport { getDiscogsDateValue } from \"./utils.js\";\n\nexport class Metadata {\n  /**\n   * @param {String}\n   */\n  version;\n\n  /**\n   * @param {String}\n   */\n  artist;\n\n  /**\n   * @param {String}\n   */\n  title;\n\n  /**\n   * @param {String}\n   */\n  label;\n\n  /**\n   * @param {Object}\n   */\n  format;\n\n  /**\n   * @param {String}\n   */\n  country;\n\n  /**\n   * @param {Array}\n   */\n  released;\n\n  /**\n   * @param {String}\n   */\n  tracklist;\n\n  /**\n   * @param {String}\n   */\n  credits;\n\n  /**\n   * @param {String}\n   */\n  genres;\n\n  /**\n   * @param {String}\n   */\n  submissionNotes;\n\n  constructor({\n    artist,\n    title,\n    label,\n    trackQty,\n    formatFileType,\n    formatDescription,\n    country,\n    released,\n    tracklist,\n    credits,\n    genres,\n    releaseUrl\n  }) {\n    const self = this;\n    const manifest = getExtensionManifest();\n\n    self.version = manifest.version;\n    self.artist = artist;\n    self.title = title;\n    self.label = label;\n    self.format = {\n      fileType: formatFileType,\n      qty: trackQty,\n      description: formatDescription\n    };\n    self.country = country;\n    self.released = released;\n    self.tracklist = tracklist;\n    self.credits = credits;\n    self.genres = genres;\n    self.submissionNotes = generateSubmissionNotes(releaseUrl);\n  }\n\n  /**\n   * Creates a Metadata instance from a Release object.\n   * @param {Release} release - The Release object to convert.\n   * @return {Metadata} - The converted Metadata instance.\n   */\n  static fromRelease(release) {\n    const publishedDate = getDiscogsDateValue(release.published);\n    const modifiedDate = getDiscogsDateValue(release.modified);\n    const discogsGenres = keywordsToDiscogsGenres(release.keywords);\n    const discogsStyles = keywordsToDiscogsStyles(release.keywords);\n\n    return new Metadata({\n      artist: release.releaseItem.artist,\n      title: release.releaseItem.title,\n      label: release.label,\n      released: {\n        publishedDate,\n        modifiedDate\n      },\n      trackQty: release.tracksQty,\n      formatFileType: 'FLAC',\n      formatDescription: 'Album',\n      genres: {\n        keywords: release.keywords,\n        autoDetectedGenres: discogsGenres,\n        autoDetectedStyles: discogsStyles,\n      },\n      releaseUrl: release.url\n    });\n  }\n}\n","import { keywordsToDiscogsGenres, keywordsToDiscogsStyles } from \"../../bandcamp/modules/bandcamp.js\";\nimport { capitalizeEachWord, removeLeadingZeroOrColon } from \"../../modules/utils.js\";\nimport { Release, Track } from \"../../app/release.js\";\nimport { getDiscogsDateValue } from \"./utils.js\";\nimport { Metadata } from \"./metadata.js\";\n\n/**\n * Represents a Discogs CSV entry.\n */\nexport class DiscogsCsv {\n  /**\n   * Creates a new DiscogsCsv instance.\n   * @param {Object} params - The parameters for the DiscogsCsv.\n   * @param {String} params.artist - The artist name.\n   * @param {String} params.title - The release title.\n   * @param {String} params.label - The label name.\n   * @param {String} params.catno - The catalog number.\n   * @param {String} params.format - The release format.\n   * @param {Array<String>} params.genres - The genres associated with the release.\n   * @param {Array<String>} params.styles - The styles associated with the release.\n   * @param {Array<Track>} params.tracks - The tracks included in the release.\n   * @param {String} params.notes - Additional notes.\n   * @param {Date} params.date - The release date.\n   * @param {String} params.images - The image URLs associated with the release.\n   */\n  constructor({\n    artist,\n    title,\n    label,\n    catno,\n    format,\n    genres,\n    styles,\n    tracks,\n    notes,\n    date,\n    images\n  }) {\n    this.artist = artist;\n    this.title = title;\n    this.label = label;\n    this.catno = catno;\n    this.format = format;\n    this.genres = genres;\n    this.styles = styles;\n    this.tracks = tracks;\n    this.notes = notes;\n    this.date = date;\n    this.images = images;\n  }\n\n  /**\n   * Creates a DiscogsCsv instance from a Release object.\n   * @param {Release} release - The Release object to convert.\n   * @return {DiscogsCsv} - The converted DiscogsCsv instance.\n   */\n  static fromRelease(release) {\n    const label = release.artist === release.label ? `Not On Label (${release.artist} Self-released)` : release.label;\n    const metadata = Metadata.fromRelease(release);\n\n    return new DiscogsCsv({\n      artist: release.releaseItem.artist,\n      title: release.releaseItem.title,\n      label: label,\n      catno: 'none',\n      format: 'File',\n      genres: keywordsToDiscogsGenres(release.keywords),\n      styles: keywordsToDiscogsStyles(release.keywords),\n      tracks: release.tracks,\n      notes: JSON.stringify(metadata),\n      date: release.published,\n      images: release.image\n    });\n  }\n\n  /**\n   * Adds a genre to the release.\n   * @param {String} genre - The genre to add.\n   * @returns {DiscogsCsv} - The updated DiscogsCsv instance.\n   */\n  addGenre(genre) {\n    this.genres.push(genre);\n    return this;\n  }\n\n  /**\n   * Adds a style to the release.\n   * @param {String} style - The style to add.\n   * @returns {DiscogsCsv} - The updated DiscogsCsv instance.\n   */\n  addStyle(style) {\n    this.styles.push(style);\n    return this;\n  }\n\n  /**\n   * Adds a track to the release.\n   * @param {String} track - The track to add.\n   * @returns {DiscogsCsv} - The updated DiscogsCsv instance.\n   */\n  addTrack(track) {\n    this.tracks.push(track);\n    return this;\n  }\n\n  /**\n   * Retrieves the concatenated genre string.\n   * @returns {String} - The concatenated genre string.\n   */\n  getGenre() {\n    return this.genres.filter(genre => genre !== 'Folk, World, & Country').join(', ');\n  }\n\n  /**\n   * Retrieves the concatenated style string.\n   * @returns {String} - The concatenated style string.\n   */\n  getStyle() {\n    return this.styles.join(', ');\n  }\n\n  /**\n   * Retrieves the formatted date value\n   * @returns {String} - The discogs date value\n   */\n  getDate() {\n    return getDiscogsDateValue(this.date);\n  }\n\n  /**\n   * Converts the DiscogsCsv instance to a CSV object.\n   * @returns {Object} - The CSV object representing the csv row object.\n   */\n  toCsvObject() {\n    const tracks = this.tracks\n      .map(track => `${capitalizeEachWord(track.title)} ${removeLeadingZeroOrColon(track.time.value)}`)\n      .join(\"\\r\");\n    const notes = this.notes ? this.notes.replace(/\"/g, '\"\"') : '';\n\n    return {\n      artist: `\"${this.artist}\"`,\n      title: `\"${capitalizeEachWord(this.title)}\"`,\n      label: `\"${this.label}\"`,\n      catno: this.catno,\n      format: this.format,\n      genre: `\"${this.getGenre()}\"`,\n      style: `\"${this.getStyle()}\"`,\n      tracks: `\"${tracks}\"`,\n      notes: `\"${notes}\"`,\n      date: this.getDate(),\n      images: this.images\n    };\n  }\n}\n","import { isArray, isFunction, isObject, isString } from \"./utils.js\";\n\nexport function hasDataAttribute(element, attributeName) {\n  return element.hasAttribute(`data-${attributeName}`);\n}\n\nexport function setDataAttribute(element, attributeName, attributeValue = '') {\n  if (isObject(attributeName)) {\n    const obj = attributeName;\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        setDataAttribute(element, key, obj[key]);\n      }\n    }\n    return;\n  }\n  element.setAttribute(`data-${attributeName}`, attributeValue);\n}\n\nexport function getDataAttribute(element, attributeName, defaultValue = undefined) {\n  return hasDataAttribute(element, attributeName) ? element.getAttribute(`data-${attributeName}`) : defaultValue;\n}\n\nexport function show(...element) {\n  element.forEach(el => isArray(el) ? show(...el) : el.classList.remove('visually-hidden'));\n}\n\nexport function hide(...element) {\n  element.forEach(el => isArray(el) ? hide(...el) : el.classList.add('visually-hidden'));\n}\n\nexport function disable(...element) {\n  element.forEach(el => isArray(el) ? disable(...el) : (el.disabled = true));\n}\n\nexport function enable(...element) {\n  element.forEach(el => isArray(el) ? enable(...el) : (el.disabled = false));\n}\n\n/**\n * Triggers click event on the element\n * @param {Element} element\n */\nexport function click(element) {\n  var event = new MouseEvent(\"click\", {\n      bubbles: true,\n      cancelable: true,\n      view: window\n  });\n  element.dispatchEvent(event);\n  return element;\n}\n\n/**\n * Triggers input event on element\n * @param {Element} element\n */\nexport function input(element, value) {\n  if (isString(value)) {\n    // Trigger input event only when the value has changed\n    if (element.value !== value) {\n      element.value = value;\n      triggerInputEvent(element);\n    }\n\n    return element;\n  }\n\n  triggerInputEvent(element);\n  return element;\n}\n\nfunction triggerInputEvent(element) {\n  element.dispatchEvent(new Event('input'));\n  return element;\n}\n\n/**\n * @param {String} htmlString\n * @returns {Element}\n */\nexport function createElementFromHTML(htmlString) {\n  const tempDiv = document.createElement('div');\n  tempDiv.innerHTML = htmlString.trim();\n  return tempDiv.firstChild;\n}\n\nexport function createSelectListFromArray(arrayOfObjects, selectId) {\n  const selectElement = document.createElement('select');\n  selectElement.id = selectId; // Set the id for the select element\n\n  arrayOfObjects.forEach((obj) => {\n    const optionElement = document.createElement('option');\n    optionElement.value = obj.value;\n    optionElement.text = obj.text;\n    selectElement.appendChild(optionElement);\n  });\n\n  return selectElement;\n}\n\nexport function createDataListFromArray(arrayOfObjects, selectId) {\n  const selectElement = document.createElement('select');\n  selectElement.id = selectId; // Set the id for the select element\n\n  arrayOfObjects.forEach((obj) => {\n    const optionElement = document.createElement('option');\n    optionElement.value = obj.value;\n    optionElement.text = obj.text;\n    selectElement.appendChild(optionElement);\n  });\n\n  return selectElement;\n}\n\nexport function createDatalistFromArray(dataArray, datalistId) {\n  const datalist = document.createElement('datalist');\n  datalist.id = datalistId;\n\n  dataArray.forEach((optionText) => {\n    const option = document.createElement('option');\n    option.value = optionText;\n    datalist.appendChild(option);\n  });\n\n  return datalist;\n}\n\nexport function contentChangeWithPolling(element, callback, interval = 1000) {\n  let previousContent = element.textContent;\n\n  const poller = setInterval(() => {\n    const currentContent = element.textContent;\n    if (currentContent !== previousContent) {\n      callback(currentContent);\n      previousContent = currentContent;\n    }\n  }, interval);\n\n  // Optionally, you can return a function to stop the polling when needed\n  return function stopPolling() {\n    clearInterval(poller);\n  };\n}\n\nexport function selectElementWithContent(rootElement, querySelector, content) {\n  const elements = rootElement.querySelectorAll(querySelector);\n\n  for (const element of elements) {\n    if (element.textContent.includes(content)) {\n      return element;\n    }\n  }\n\n  return null;\n}\n\nexport function isElementDisplayNone(element) {\n  return window.getComputedStyle(element).display === 'none';\n}\n\nexport function isHtmlElement(element) {\n  return element instanceof HTMLElement;\n}\n\nexport function getCurrentUrl() {\n  return window.location.href;\n}\n\n/**\n * Observes changes to a specified attribute on a given HTMLElement\n * and runs a callback function when changes are detected.\n *\n * @param {HTMLElement} element - The element to observe.\n * @param {string} attributeName - The name of the attribute to observe.\n * @param {Function} callback - The function to call when the attribute changes.\n */\nexport function observeAttributeChange(element, attributeName, callback) {\n  const observer = new MutationObserver((mutationsList) => {\n      for (const mutation of mutationsList) {\n          if (mutation.type === 'attributes' && mutation.attributeName === attributeName) {\n              callback(element);\n          }\n      }\n  });\n\n  const config = { attributes: true, attributeFilter: [attributeName] };\n  observer.observe(element, config);\n}\n\n/**\n * @param {String} cssUrl\n */\nexport function injectCSSFile(cssUrl) {\n  const linkElement = document.createElement('link');\n  linkElement.rel = 'stylesheet';\n  linkElement.href = cssUrl;\n  linkElement.onload = () => {\n    console.log('[B2D] Injected css file:', cssUrl);\n  };\n\n  document.head.appendChild(linkElement);\n}\n\nexport function injectJSFile(url, callback) {\n  const s = document.createElement('script');\n  s.src = url;\n  s.onload = callback;\n  (document.head||document.documentElement).appendChild(s);\n}\n\nexport const createIconLink = ({\n  className = 'icon-link',\n  href = '#',\n  onClick,\n  title = '',\n  iconDefault,\n  iconOnClick,\n  iconOnClickTimeout = 3000,\n}) => {\n  const link = document.createElement(\"a\");\n  link.classList.add(className);\n  link.title = title;\n  link.href = href;\n  link.target = '_blank';\n  link.innerHTML = `<b2d-icon name=\"${iconDefault}\"></b2d-icon>`;\n\n  if (isFunction(onClick)) {\n    link.addEventListener('click', (e) => {\n      e.preventDefault();\n      const eventReturn = onClick(e);\n\n      if (iconOnClick) {\n        const icon = link.querySelector('b2d-icon');\n        icon.setIcon(iconOnClick);\n        setTimeout(() => {\n          icon.setIcon(iconDefault);\n        }, iconOnClickTimeout);\n      }\n\n      return eventReturn;\n    });\n  }\n\n  return link;\n}\n","import { getDataAttribute, input, setDataAttribute } from \"../../modules/html\";\nimport { isEmptyArray } from \"../../modules/utils\";\n\nclass ReleasesList extends HTMLElement {\n  constructor() {\n    super();\n\n    const self = this;\n    self.stateButtons = [];\n    self.statusElements = [];\n\n    const selectAllCheckboxId = self.getPrefixed('selectAllCheckbox');\n    const searchInputId = self.getPrefixed('searchInput');\n    const sortingId = self.getPrefixed('sorting');\n    const template = document.createElement('template');\n    template.innerHTML = `\n        <div class=\"content-header input-group input-group-sm sticky-top\">\n          <input type=\"text\" id=\"${searchInputId}\" class=\"form-control form-control-sm\" placeholder=\"Search...\">\n          <button id=\"clear-search-button\" type=\"button\" class=\"btn\" title=\"Clear search\">\n            <b2d-icon name=\"x-circle\"></b2d-icon>\n          </button>\n          <div class=\"control-buttons btn-group btn-group-sm\" role=\"group\" aria-label=\"Control buttons\">\n          </div>\n          <button id=\"${sortingId}-button\" class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\" title=\"Sorted by default\">\n            <b2d-icon name=\"sort-down\"></b2d-icon>\n          </button>\n          <ul id=\"${sortingId}\" class=\"dropdown-menu dropdown-menu-end\">\n            <li><a class=\"dropdown-item\" href=\"#\" data-attr=\"data-sort\" data-comp-type=\"int\" data-dir=\"asc\" data-icon=\"sort-down\" data-title=\"Sorted by default\"><b2d-icon name=\"sort-down\"></b2d-icon> reset</a></li>\n            <li><hr class=\"dropdown-divider\"></li>\n            <li><a class=\"dropdown-item\" href=\"#\" data-attr=\"data-title\" data-dir=\"asc\" data-icon=\"sort-alpha-down\" data-title=\"Sorted by name A..z\"><b2d-icon name=\"sort-alpha-down\"></b2d-icon> by name A..z</a></li>\n            <li><a class=\"dropdown-item\" href=\"#\" data-attr=\"data-title\" data-dir=\"desc\" data-icon=\"sort-alpha-down-alt\" data-title=\"Sorted by name z..A\"><b2d-icon name=\"sort-alpha-down-alt\"></b2d-icon> by name z..A</a></li>\n          </ul>\n        </div>\n        <table class=\"table table-hover table-sm table-transparent table-borderless\">\n          <thead>\n            <tr>\n              <th><input type=\"checkbox\" id=\"${selectAllCheckboxId}\" title=\"Select all\"></th>\n              <th>\n                <label for=\"${selectAllCheckboxId}\">\n                  <span id=\"${selectAllCheckboxId}-info\" class=\"selected-info\">Releases</span>\n                </label>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n          </tbody>\n        </table>\n    `;\n\n    self.appendChild(template.content.cloneNode(true));\n\n    const selectAllCheckbox = self.querySelector(\"#\"+selectAllCheckboxId);\n    selectAllCheckbox.addEventListener(\"change\", () => {\n      self.selectAllCheckboxes(selectAllCheckbox.checked);\n    });\n\n    const table = self.querySelector(\".table\");\n    table.addEventListener('change', event => {\n      const target = event.target;\n      if (target.type === 'checkbox') {\n        self\n          .selectCheckbox(target, target.checked)\n          .refreshStatus();\n      }\n    });\n\n    self.searchInput = document.getElementById(searchInputId);\n    self.searchInput.addEventListener(\"input\", filterTable);\n\n    function filterTable() {\n      const input = self.searchInput.value.toLowerCase();\n      const rows = table.querySelectorAll(\"tbody tr\");\n\n      rows.forEach((row) => {\n        const label = row.querySelector(\"td label\").textContent.toLowerCase();\n        row.classList[label.includes(input) ? 'remove' : 'add']('visually-hidden');\n      });\n\n      self.refreshStatus();\n    }\n\n    function setupSorting() {\n      const sortingUl = self.querySelector('#' + sortingId);\n      const sortingBtn = self.querySelector('#' + sortingId + '-button');\n      const sortingItems = sortingUl.querySelectorAll('.dropdown-item');\n\n      function setupSortingButton(sortingItem) {\n        const attr = getDataAttribute(sortingItem, 'attr');\n        const compType = getDataAttribute(sortingItem, 'comp-type', 'string');\n        const dir = getDataAttribute(sortingItem, 'dir', 'asc');\n        const icon = getDataAttribute(sortingItem, 'icon');\n        const title = getDataAttribute(sortingItem, 'title');\n\n        sortingBtn.innerHTML = `<b2d-icon name=\"${icon}\"></b2d-icon>`;\n        sortingBtn.setAttribute('title', title);\n        sortTable(attr, dir, compType);\n      }\n\n      sortingItems.forEach((option) => {\n        option.addEventListener('click', (e) => {\n          setupSortingButton(e.target);\n        });\n      });\n    }\n\n    const sortTable = (attr, dir = 'asc', compType = 'string') => {\n      const rows = Array.from(table.rows).slice(1); // Exclude the header row\n      const isComparingInt = compType === 'int';\n\n      rows.sort((a, b) => {\n        let x = a.getAttribute(attr);\n        let y = b.getAttribute(attr);\n\n        if (isComparingInt) {\n          x = parseInt(x);\n          y = parseInt(y);\n\n          return dir === \"asc\" ? x - y : y - x;\n        }\n\n        return dir === \"asc\" ? x.localeCompare(y) : y.localeCompare(x);\n      });\n\n      // Reorder the rows in the table\n      rows.forEach((row) => table.tBodies[0].appendChild(row));\n    };\n\n    setupSorting();\n\n    // Setup clear search button\n    const clearSearchBtn = self.querySelector('#clear-search-button');\n    clearSearchBtn.addEventListener('click', () => {\n      self\n        .setSearchValue('')\n        .refreshSearchStatus();\n      self.searchInput.focus();\n    });\n  }\n\n  refreshStatus() {\n    const self = this;\n    self\n      .updateButtonsState()\n      .refreshItemsStatus();\n    return self;\n  }\n\n  refreshItemsStatus() {\n    const self = this;\n    const refreshStatusElement = (element) => {\n      const total = self.querySelectorAll('tr.release-item').length;\n      const selected = self.getSelectedValues().length;\n      const filtered = self.querySelectorAll('tr.release-item:not(.visually-hidden)').length;\n      const statusText = element.getAttribute(\"data-format\")\n        .replace(new RegExp(\"{total}\", \"g\"), total)\n        .replace(new RegExp(\"{selected}\", \"g\"), selected)\n        .replace(new RegExp(\"{filtered}\", \"g\"), filtered);\n      element.textContent = statusText;\n    };\n    self.statusElements.forEach(refreshStatusElement);\n    return self;\n  }\n\n  refreshSearchStatus() {\n    const self = this;\n    input(self.searchInput);\n    return self;\n  }\n\n  addStatusElement(...element) {\n    const self = this;\n    element.forEach(el => self.statusElements.push(el));\n    return self;\n  }\n\n  getPrefix() {\n    return this.id;\n  }\n\n  getPrefixed(str) {\n    return this.getPrefix() + '__' + str ?? '';\n  }\n\n  /**\n   * @param {Element|Array<Element>} button\n   * @returns {ReleasesList}\n   */\n  appendButton(...button) {\n    const controlButtons = this.querySelector(\".control-buttons\");\n    button.forEach(el => controlButtons.appendChild(el));\n    return this;\n  }\n\n  addStateButton(...button) {\n    const self = this;\n    button.forEach(btn => self.stateButtons.push(btn));\n    return self;\n  }\n\n  /**\n   * @param {Element} checkbox\n   * @param {Boolean} checked\n   * @returns {ReleasesList}\n   */\n  selectCheckbox(checkbox, checked) {\n    if (checkbox.type !== 'checkbox') {\n      return this;\n    }\n\n    checkbox.checked = checked;\n\n    if (checkbox.classList.contains('release-checkbox')) {\n      const tr = checkbox.closest('tr');\n      const className = 'table-active';\n\n      if (checkbox.checked) {\n        tr.classList.add(className);\n      } else {\n        tr.classList.remove(className);\n      }\n    }\n    return this;\n  }\n\n  connectedCallback() {\n    const dataAttr = this.getAttribute(\"data\");\n    const data = dataAttr ? JSON.parse(dataAttr) : [];\n\n    if (!isEmptyArray(data)) {\n      this.populateData(data);\n    }\n  }\n\n  /**\n   * @param {Array} data\n   * @returns {Self}\n   */\n  populateData(data) {\n    const self = this;\n    const tableBody = self.querySelector(\"tbody\");\n    tableBody.innerHTML = \"\"; // Clear existing data\n\n    data.forEach((item, index) => {\n      const row = document.createElement(\"tr\");\n      const checkboxId = self.getPrefixed('checkbox_'+index);\n      row.classList.add('release-item');\n      setDataAttribute(row, 'sort', index);\n      setDataAttribute(row, item.dataAtts);\n      row.innerHTML = `\n        <td><input type=\"checkbox\" value=\"${item.value}\" id=\"${checkboxId}\" class=\"release-checkbox\"></td>\n        <td><label for=\"${checkboxId}\">${item.title}</label><span class=\"controls\"></span></td>\n      `;\n\n      const controlsEl = row.querySelector('span.controls');\n      item.controls.forEach((control) => {\n        if (control instanceof HTMLElement) {\n          controlsEl.appendChild(control);\n        }\n      });\n\n      tableBody.appendChild(row);\n    });\n\n    self\n      .refreshStatus()\n      .refreshSearchStatus();\n\n    return self;\n  }\n\n  selectAllCheckboxes(checked) {\n    const self = this;\n    self.getCheckboxes().forEach(checkbox => {\n      self.selectCheckbox(checkbox, checked);\n    });\n    return self;\n  }\n\n  getCheckboxes(onlyChecked = false) {\n    return this.querySelectorAll(\".release-item:not(.visually-hidden) input.release-checkbox[type='checkbox']\" + (onlyChecked ? \":checked\" : \"\"));\n  }\n\n  /**\n   * @returns {Array}\n   */\n  getSelectedValues() {\n    return Array.from(this.getCheckboxes(true)).map(checkbox => checkbox.value);\n  }\n\n  getSelectedTitles() {\n    return Array.from(this.getCheckboxes(true)).map(checkbox => checkbox.nextElementSibling.textContent);\n  }\n\n  /**\n   * @param {Element} button\n   * @returns {ReleasesList}\n  */\n updateButtonState(button) {\n   const self = this;\n   const checkboxes = self.getCheckboxes();\n   const anyCheckboxChecked = Array.from(checkboxes).some(checkbox => checkbox.checked);\n   button.disabled = !anyCheckboxChecked;\n   return self;\n  }\n\n  updateButtonsState() {\n    const self = this;\n    self.querySelectorAll('[data-status-update]').forEach(button => self.updateButtonState(button));\n    self.stateButtons.forEach(button => self.updateButtonState(button));\n    return self;\n  }\n\n  setSearchValue(value) {\n    const self = this;\n    self.searchInput.value = value;\n    return self;\n  }\n}\n\nif (!customElements.get('releases-list')) {\n  customElements.define('releases-list', ReleasesList);\n}\n","import { safeFilename } from \"./utils.js\";\n\nexport function arrayToCsv(rows) {\n  return rows.map(e => e.join(\",\")).join(\"\\n\");\n}\n\nexport function objectsToCsv(objects) {\n  if (!objects || objects.length === 0) {\n    return ''; // Return an empty string if the array is empty or not provided\n  }\n\n  const headers = Object.keys(objects[0]);\n  const csvRows = [headers.join(',')];\n\n  for (const obj of objects) {\n    const values = headers.map(header => obj[header]);\n    csvRows.push(values.join(','));\n  }\n\n  return csvRows.join('\\n');\n}\n\nexport function downloadCsv(csv, csvFileName) {\n  const blob = new Blob([csv], { type: 'text/csv' });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `${safeFilename(csvFileName)}.csv`;\n  a.click();\n  URL.revokeObjectURL(url);\n}\n","import { Release } from \"../app/release.js\";\nimport { isValidBandcampURL } from \"../bandcamp/modules/html.js\";\nimport { generateKeyForRelease, generateKeyForUrl, generateKeyUrlMapFromUrls, generateKeysFromUrls } from \"./key-generator.js\";\nimport { isArray, isFunction, isObject } from \"./utils.js\";\n\nconst storage = chrome.storage.local;\n\nexport function logStorage() {\n  console.log('B2D: Storage data');\n  storage.get(null, (data) => console.log(data));\n}\n\nexport function findAllReleases(onFind) {\n  storage.get(null, (data) => {\n    const releases = [];\n\n    for (const key in data) {\n      if (!data.hasOwnProperty(key) && !isObject(data[key])) {\n        continue;\n      }\n\n      try {\n        releases.push(Release.fromStorageObject(data[key]));\n      } catch (error) {\n        continue;\n      }\n    }\n\n    if (isFunction(onFind)) onFind(releases);\n  });\n}\n\nexport function findReleaseByUrl(url, onFind, onMissing) {\n  const key = generateKeyForUrl(url);\n  storage.get([key], (result) => {\n    if (isObject(result[key])) {\n      try {\n        const release = Release.fromStorageObject(result[key]);\n        if (isFunction(onFind)) onFind(release);\n      } catch (error) {\n        console.log(\"B2D: Broken storage data for release\", result[key]);\n        clearStorageByKey(key);\n      }\n    } else {\n      console.log(\"B2D: Release data doesn't exists\", key);\n      if (isFunction(onMissing)) onMissing(key);\n    }\n  });\n\n}\n\nexport function findReleasesByUrls(urls, onFind) {\n  const keys = generateKeysFromUrls(urls);\n  storage.get(keys, result => {\n    let releases = Object\n      .values(result)\n      .map(function(obj) {\n        try {\n          return Release.fromStorageObject(obj);\n        } catch (error) {\n          console.log(\"B2D: Broken storage object. \" + JSON.stringify(error), obj);\n          return null;\n        }\n      })\n      .filter(obj => obj instanceof Release);\n    if (isFunction(onFind)) onFind(releases);\n  });\n}\n\nexport function findMissingUrls(urls, onFind) {\n  const keyUrlMap = generateKeyUrlMapFromUrls(urls);\n  const keys = Object.keys(keyUrlMap);\n  storage.get(keys, result => {\n    const foundKeys = Object.keys(result);\n    const missingKeys = keys.filter(key => !foundKeys.includes(key));\n    const missingUrls = missingKeys.map(key => keyUrlMap[key]);\n    if (isFunction(onFind)) onFind(missingUrls);\n  });\n}\n\n/**\n * @param {Release} release\n */\nexport function saveRelease(release) {\n  const key = generateKeyForRelease(release);\n  storage.set({ [key]: release.toStorageObject() }, () => {\n    console.log(\"B2D: Release data was saved in the local storage\");\n  });\n}\n\n/**\n * @param {String} key\n * @param {Array} categoryValues\n */\nexport function addReleaseHistory(key, categoryValues) {\n  storage.get([key], (data) => {\n    let releaseData = data[key] || null;\n    if (releaseData === null) return;\n    let history = releaseData.history || {};\n\n    const date = new Date();\n    const dateStr = date.toISOString();\n\n    for (let category in categoryValues) {\n      if (!categoryValues.hasOwnProperty(category)) continue;\n\n      let historyCategory = history[category] || [];\n      if (!isArray(historyCategory)) continue;\n\n      const historyValue = {\n        date: dateStr,\n        value: categoryValues[category]\n      };\n\n      addUniqueValueObjectToArray(historyCategory, historyValue);\n      history[category] = historyCategory;\n    }\n\n    releaseData.history = history;\n\n    storage.set({ [key]: releaseData }, () => {\n      console.log(\"B2D: Release history for categories was saved successfully\", categoryValues);\n    });\n  });\n}\n\nfunction addUniqueValueObjectToArray(arr, obj) {\n  if (arr.length === 0 || arr[arr.length - 1].value !== obj.value) {\n      arr.push(obj);\n  }\n}\n\nexport function clearStorage() {\n  storage.clear();\n}\n\nexport function clearStorageByKey(key, onDone) {\n  isArray(key)\n    ? key.forEach(k => clearStorageByKey(k, onDone))\n    : storage.remove(key, () => {\n      if (chrome.runtime.lastError) {\n        console.error(`Error clearing local storage item with key \"${key}\": ${chrome.runtime.lastError}`);\n      }\n\n      if (isFunction(onDone)) onDone();\n    });\n}\n\nexport function getStorageSize(callable) {\n  storage.getBytesInUse(null, callable);\n}\n","import { Release, ReleaseItem } from \"../app/release.js\";\nimport { Metadata } from \"../discogs/app/metadata.js\";\nimport { getSearchDiscogsReleaseUrl } from \"../discogs/modules/discogs.js\";\nimport { chromeSendMessageToCurrentTab } from \"../modules/chrome.js\";\nimport { createIconLink, disable, enable, getDataAttribute, hasDataAttribute, setDataAttribute } from \"../modules/html.js\";\nimport { generateKeyForReleaseItem } from \"../modules/key-generator.js\";\nimport { convertToAlias, isArray, isObject, isString } from \"../modules/utils.js\";\n\nexport function createBootstrapCheckbox(id, value, labelText, checked) {\n  // Create the checkbox input element\n  const checkboxInput = document.createElement(\"input\");\n  checkboxInput.classList.add(\"form-check-input\");\n  checkboxInput.type = \"checkbox\";\n  checkboxInput.id = id;\n  checkboxInput.value = value;\n  checkboxInput.checked = checked;\n\n  // Create the label element\n  const label = document.createElement(\"label\");\n  label.classList.add(\"form-check-label\");\n  label.htmlFor = id;\n  label.innerHTML = labelText;\n\n  // Create the div container for the checkbox and label\n  const container = document.createElement(\"div\");\n  container.classList.add(\"form-check\");\n  container.appendChild(checkboxInput);\n  container.appendChild(label);\n\n  return container;\n}\n\n/**\n * Converts a JavaScript object to an HTML element representing a table.\n * @param {Object} data - The JavaScript object to convert.\n * @returns {Node} - The HTML element representing the converted table.\n */\nexport function objectToHtmlElement(data) {\n  if (!isObject(data) && !isArray(data)) {\n    return document.createTextNode(data);\n  }\n\n  const table = document.createElement(\"table\");\n  table.classList.add(\"table\", \"table-sm\", \"table-striped\", \"table-bordered\");\n\n  for (const [key, value] of Object.entries(data)) {\n    const row = document.createElement(\"tr\");\n    const keyCell = document.createElement(\"th\");\n    const valueCell = document.createElement(\"td\");\n\n    keyCell.classList.add(\"w-25\");\n    valueCell.classList.add(\"w-auto\");\n\n    keyCell.textContent = key;\n\n    if (isObject(value)) {\n      valueCell.appendChild(objectToHtmlElement(value));\n    } else if (isArray(value)) {\n      valueCell.innerHTML = value\n        .map(item => (isString(item) ? item : objectToHtmlElement(item).outerHTML))\n        .join(\", \");\n    } else {\n      valueCell.innerHTML = isString(value)\n        ? value.replace(/[\\r\\n]+/g, \"<br/>\")\n        : value;\n    }\n\n    row.appendChild(keyCell);\n    row.appendChild(valueCell);\n    table.appendChild(row);\n  }\n\n  return table;\n}\n\n/**\n * Converts an object into a nested HTML <details> element with key-value pairs.\n *\n * @param {Object} obj - The input object to be converted into a details element.\n * @param {string} [title=''] - An optional title for the top-level <summary> element.\n * @returns {HTMLElement} The generated <details> element representing the object's structure.\n */\nexport function objectToDetailsElement(obj, title = '') {\n  const detailsElement = document.createElement('details');\n  const summaryElement = document.createElement('summary');\n  summaryElement.textContent = title;\n  detailsElement.appendChild(summaryElement);\n\n  Object.entries(obj).forEach(([key, value]) => {\n    if ((isObject(value) || isArray(value)) && value !== null) {\n      const nestedDetails = objectToDetailsElement(value, key);\n      detailsElement.appendChild(nestedDetails);\n    } else {\n      const keyValueDetails = createKeyValueDetails(key, value);\n      detailsElement.appendChild(keyValueDetails);\n    }\n  });\n\n  return detailsElement;\n}\n\n/**\n * Creates a <details> element with a key-value pair.\n *\n * @param {string} key - The key (property name) of the object property.\n * @param {*} value - The value associated with the key.\n * @returns {HTMLElement} The generated <details> element representing the key-value pair.\n */\nexport function createKeyValueDetails(key, value) {\n  const keyValueDetails = document.createElement('details');\n  const summaryElement = document.createElement('summary');\n  summaryElement.textContent = key;\n  keyValueDetails.appendChild(summaryElement);\n\n  const valueElement = document.createElement('div');\n\n  if (value instanceof HTMLElement) {\n    valueElement.appendChild(value);\n  } else {\n    valueElement.textContent = value instanceof Date ? value.toISOString() : value;\n  }\n\n  keyValueDetails.appendChild(valueElement);\n\n  return keyValueDetails;\n}\n\n/**\n * @param {Element} button\n * @param {Array<Element>} checkboxes\n */\nexport function updateButtonState(button, checkboxes) {\n  const anyCheckboxChecked = Array.from(checkboxes).some(checkbox => checkbox.checked);\n  button.disabled = !anyCheckboxChecked;\n}\n\n/**\n * @param {Array<ReleaseItem>|Array<Release>} releases\n * @return {Array}\n */\nfunction transformReleaseItemsToReleaseListData(releases) {\n  const data = [];\n\n  releases.forEach(item => {\n    const release = item instanceof Release ? item.releaseItem : item;\n    const viewLink = createIconLink({\n      href: release.url,\n      iconDefault: 'box-arrow-up-right',\n      className: 'link-bandcamp-url',\n      title: 'View bandcamp release',\n    });\n    const searchLink = createIconLink({\n      href: getSearchDiscogsReleaseUrl(release.artist, release.title),\n      iconDefault: 'search',\n      className: 'link-discogs-search',\n      title: 'Search release on Discogs',\n    });\n    const controls = [\n      viewLink,\n      searchLink,\n    ];\n\n    if (item instanceof Release) {\n      const applyMetadataLink = createIconLink({\n        title: 'Load release hints into the current Discogs release draft',\n        iconDefault: 'file-arrow-down',\n        iconOnClick: 'file-arrow-down-fill',\n        onClick: () => {\n          const metadata = Metadata.fromRelease(item);\n          chromeSendMessageToCurrentTab({\n            type: 'metadata',\n            metadata\n          });\n\n          return true;\n        }\n      });\n      controls.push(applyMetadataLink);\n    }\n\n    data.push({\n      title: `${release.artist} - ${release.title}`,\n      value: generateKeyForReleaseItem(release),\n      id: convertToAlias(release.title),\n      dataAtts: {\n        title: `${release.artist} - ${release.title}`\n      },\n      controls,\n    });\n  });\n\n  return data;\n}\n\n/**\n * @param {ReleasesList} releasesList\n * @param {Array<ReleaseItem>|Array<Release>} releases\n */\nexport function populateReleasesList(releasesList, releases) {\n  releasesList.populateData(\n    transformReleaseItemsToReleaseListData(releases)\n  );\n}\n\nexport function setBackgroundImage(element, imageUrl) {\n  if (!element instanceof HTMLElement) return;\n  element.style.backgroundImage = `url(${imageUrl})`;\n}\n\nexport function setButtonInLoadingState(button) {\n  disable(button);\n  setDataAttribute(button, 'original-content', button.innerHTML);\n  button.innerHTML = `\n  <span class=\"spinner-border spinner-border-sm\" aria-hidden=\"true\"></span>\n  <span class=\"visually-hidden\" role=\"status\">Loading...</span>\n`;\n  return button;\n}\n\nexport function removeButtonLoadingState(button) {\n  enable(button);\n  if (hasDataAttribute(button, 'original-content')) {\n    button.innerHTML = getDataAttribute(button, 'original-content');\n  }\n  return button;\n}\n","import { DiscogsCsv } from \"../../discogs/app/discogs-csv.js\";\nimport { ReleasesList } from '../components/releases-list.js';\nimport { downloadCsv, objectsToCsv } from \"../../modules/csv.js\";\nimport { createElementFromHTML, hasDataAttribute, setDataAttribute } from \"../../modules/html.js\";\nimport { clearStorage, clearStorageByKey, findAllReleases, findReleasesByUrls } from \"../../modules/storage.js\";\nimport { populateReleasesList, removeButtonLoadingState, setButtonInLoadingState } from \"../helpers.js\";\nimport config from \"../../config.js\";\nimport { loadDiscogsGenres } from \"../../discogs/modules/genres.js\";\nimport { loadKeywordMapping } from \"../../bandcamp/modules/mapping.js\";\n\n/**\n * @param {Element} btnDownloadCsv\n */\nexport function setupHistoryTab(tab, btnDownloadCsv) {\n  const releasesList = getReleasesList();\n\n  if (!hasDataAttribute(tab, 'buttons-initialized')) {\n    setupReleasesList(tab, releasesList, btnDownloadCsv);\n    setDataAttribute(tab, 'buttons-initialized');\n  }\n\n  loadDiscogsGenres(config.genres_url).then(genres => {\n    loadKeywordMapping(config.keyword_mapping_url).then(keywordsMapping => {\n      updateReleasesListData(releasesList);\n    })\n  });\n}\n\nexport function setHistoryTabSearchValue(searchValue) {\n  const releasesList = getReleasesList();\n  releasesList.setSearchValue(searchValue);\n}\n\n/**\n * @returns {ReleasesList}\n */\nfunction getReleasesList() {\n  return document.getElementById('historyReleasesList');\n}\n\nfunction updateReleasesListData(releasesList) {\n  findAllReleases((releases) => {\n    populateReleasesList(releasesList, releases);\n  });\n}\n\n/**\n * @param {Element} tab\n * @param {ReleasesList} releasesList\n * @param {Element} btnDownloadCsv\n */\nfunction setupReleasesList(tab, releasesList, btnDownloadCsv) {\n  const btnClearSelected = createElementFromHTML(`\n<button id=\"historyDataClearSelected\" type=\"button\" class=\"btn btn-danger\" data-status-update title=\"Clear selected history\">\n  <b2d-icon name=\"database-dash\"></b2d-icon>\n</button>`);\n  const btnClearAll = createElementFromHTML(`\n<button id=\"historyDataClear\" type=\"button\" class=\"btn btn-dark\" title=\"Remove all items from the history\" data-bs-toggle=\"modal\" data-bs-target=\"#historyTabDeleteAllModal\">\n  <b2d-icon name=\"database-x\"></b2d-icon>\n</button>`);\n\n  const downloadCsvFile = (event) => {\n    const button = event.target;\n    setButtonInLoadingState(button);\n\n    const bcLinks = releasesList.querySelectorAll('.release-item.table-active .link-bandcamp-url');\n    const checkedUrls = Array.from(bcLinks).map(link => link.getAttribute('href'));\n\n    findReleasesByUrls(checkedUrls, releases => {\n      const firstRelease = releases[0];\n      const csvObjects = releases.map(release => DiscogsCsv.fromRelease(release).toCsvObject());\n      const csv = objectsToCsv(csvObjects);\n      downloadCsv(csv, `discogs-selected-releases-${firstRelease.artist}`);\n      removeButtonLoadingState(button);\n    });\n  }\n\n  btnDownloadCsv.addEventListener('click', downloadCsvFile);\n  releasesList.addStateButton(btnDownloadCsv);\n\n  btnClearSelected.addEventListener('click', () => {\n    const selectedValues = releasesList.getSelectedValues();\n    clearStorageByKey(selectedValues, () => {\n      updateReleasesListData(releasesList);\n    });\n  });\n\n  tab.querySelector('#historyTabDeleteAllModal_btnYes').addEventListener('click', () => {\n    clearStorage();\n    updateReleasesListData(releasesList);\n  });\n\n  releasesList.appendButton(btnClearSelected, btnClearAll);\n  releasesList.addStatusElement(\n    document.getElementById('selectedStatusInfo'),\n    document.getElementById('viewedStatusInfo')\n  );\n}\n","import { Release } from \"../../app/release.js\";\nimport { DiscogsCsv } from \"../../discogs/app/discogs-csv.js\";\nimport { downloadCsv, objectsToCsv } from \"../../modules/csv.js\";\nimport { isEmptyArray } from \"../../modules/utils.js\";\nimport { disable, enable } from \"../../modules/html.js\";\n\n/**\n * @param {Element} button\n * @param {Array<Release>} releases\n */\nexport function setupBtnToDownloadReleasesAsCsv(button, releases) {\n  if (isEmptyArray(releases)) {\n    disable(button);\n    return;\n  }\n\n  enable(button);\n  button.addEventListener('click', () => downloadReleasesCsv(releases));\n}\n\n/**\n * @param {Array<Release>} releases\n */\nexport function downloadReleasesCsv(releases) {\n  if (isEmptyArray(releases)) {\n    return;\n  }\n\n  const firstRelease = releases[0];\n  const csvObjects = releases.map(release => DiscogsCsv.fromRelease(release).toCsvObject());\n  const csv = objectsToCsv(csvObjects);\n\n  const filename = releases.length > 1 ? `discogs-selected-releases-${firstRelease.artist}` : `discogs-releases-${firstRelease.artist}-${firstRelease.title}`;\n\n  downloadCsv(csv, filename);\n}\n","import { ReleaseItem } from \"../../app/release.js\";\nimport { getCurrentTab, openTabs } from \"../../modules/chrome.js\";\nimport { input } from \"../../modules/html.js\";\nimport { findReleasesByUrls } from \"../../modules/storage.js\";\nimport { populateReleasesList, removeButtonLoadingState, setBackgroundImage, setButtonInLoadingState } from \"../helpers.js\";\nimport { downloadReleasesCsv } from \"./download_tab.js\";\n\nexport function setupReleasesTab(tab, releasesData, bgImageSrc, searchValue, btnNavDownload) {\n  setBackgroundImage(document.querySelector('.bg-image'), bgImageSrc);\n  const releasesList = tab.querySelector('#releasesTabLIst');\n  const downloadCsvFile = async (event) => {\n    const button = event.target;\n    setButtonInLoadingState(button);\n\n    const bcLinks = releasesList.querySelectorAll('.release-item.table-active .link-bandcamp-url');\n    const checkedUrls = Array.from(bcLinks).map(link => link.getAttribute('href'));\n\n    openTabs(checkedUrls, (tab) => {\n      chrome.scripting.executeScript({\n        target: { tabId: tab.id },\n        func: waitForBandcampData\n      }).then(() => {});\n    }).then(() => {\n      setTimeout(() => {\n        // Read data from the storage\n        findReleasesByUrls(checkedUrls, releases => {\n          downloadReleasesCsv(releases);\n          removeButtonLoadingState(button);\n        });\n      }, 3000);\n    });\n  };\n\n  btnNavDownload.addEventListener('click', downloadCsvFile);\n  releasesList\n    .addStateButton(btnNavDownload)\n    .addStatusElement(\n      document.getElementById('selectedStatusInfo'),\n      document.getElementById('viewedStatusInfo')\n    );\n\n  const releaseItems = [];\n  releasesData.forEach(obj => releaseItems.push(ReleaseItem.fromObject(obj)));\n  populateReleasesList(releasesList, releaseItems);\n\n  let activeTab;\n  releasesList.searchInput.addEventListener('input', () => {\n    const selectedValue = releasesList.searchInput.value;\n\n    if (!activeTab) {\n      getCurrentTab().then((tab) => {\n        activeTab = tab;\n        sendSearchMessageToTab(activeTab, selectedValue);\n      });\n    } else {\n      sendSearchMessageToTab(activeTab, selectedValue);\n    }\n  });\n\n  input(releasesList.searchInput, searchValue);\n\n  function sendSearchMessageToTab(tab, search) {\n    chrome.tabs.sendMessage(tab.id, {\n      type: 'releases-list-search',\n      search: search\n    });\n  }\n}\n\nfunction waitForBandcampData() {\n  setTimeout(() => window.close(), 1000);\n}\n","import { Release } from \"../../app/release.js\";\nimport { getDiscogsDateValue } from \"../../discogs/app/utils.js\";\nimport { getSearchDiscogsReleaseUrl } from \"../../discogs/modules/discogs.js\";\nimport { capitalizeEachWord, removeLeadingZeroOrColon } from \"../../modules/utils.js\";\nimport { initClipboard } from \"../../utils/clipboard.js\";\nimport { setBackgroundImage } from \"../helpers.js\";\nimport { setupBtnToDownloadReleasesAsCsv } from \"./download_tab.js\";\n\n/**\n * @param {Element} tab\n * @param {Release} release\n * @param {Element} btnDownloadRelease\n * @param {Element} btnDiscogsSearch\n */\nexport function setupReleaseTab(tab, release, btnDownloadRelease, btnDiscogsSearch) {\n  outputRelease(tab, release);\n  btnDiscogsSearch.href = getSearchDiscogsReleaseUrl(release.releaseItem.artist, release.releaseItem.title);\n  setupBtnToDownloadReleasesAsCsv(btnDownloadRelease, [release]);\n}\n\n/**\n * @param {Element} tab\n * @param {Release} release\n */\nfunction outputRelease(tab, release) {\n  const releaseArtist = tab.querySelector('#release-artist');\n  const releaseTitle = tab.querySelector('#release-title');\n  const releaseDate = tab.querySelector('#release-year');\n  const releaseContent = tab.querySelector('.release-content');\n  const releaseTracks = tab.querySelector('#release-tracks');\n\n  setBackgroundImage(document.querySelector('.bg-image'), release.image);\n  releaseArtist.innerHTML = release.releaseItem.artist;\n  releaseTitle.innerHTML = release.releaseItem.title;\n  releaseDate.innerHTML = release.published.getFullYear();\n\n  let countArtistLines = countLinesInHtmlElement(releaseArtist);\n  let countTitleLines = countLinesInHtmlElement(releaseTitle);\n\n  releaseArtist.classList.toggle('display-6', countArtistLines >= 3 && countArtistLines <= 5);\n  tab.classList.add('lines-a' + countArtistLines + '-t' + countTitleLines);\n\n  const tracks = release.tracks\n    .map(track => `${track.num}. ${capitalizeEachWord(track.title)} (${removeLeadingZeroOrColon(track.time.value)})`)\n    .join(\"<br>\");\n\n  releaseTracks.innerHTML = tracks;\n}\n\nfunction countLinesInHtmlElement(el) {\n  let divHeight = el.offsetHeight\n  let lineHeight = parseInt(getComputedStyle(el).lineHeight);\n  return Math.round(divHeight / lineHeight);\n}\n","import { Release } from \"../../app/release.js\";\nimport { releaseToDiscogsCsv } from \"../../discogs/modules/discogs.js\";\nimport { objectToHtmlElement } from \"../helpers.js\";\n\nexport function setupCsvDataTab(release, btnCsvData) {\n\n  btnCsvData.addEventListener('click', () => {\n    const csvDataTabPane = document.getElementById('csvData');\n    csvDataTabPane.innerHTML = '';\n\n    if (release instanceof Release) {\n      const discogsCsv = releaseToDiscogsCsv(release);\n      appendObjectDataAsTable('Discogs CSV data', discogsCsv.toCsvObject(), csvDataTabPane);\n    }\n  });\n\n}\n\nfunction appendObjectDataAsTable(headline, obj, el) {\n  const headlineEl = document.createElement('h2');\n  headlineEl.classList.add('display-6');\n  headlineEl.innerText = headline;\n  el.appendChild(headlineEl);\n  el.appendChild(objectToHtmlElement(obj));\n}\n","// `update_url` field is not present in the manifest. If this field is absent, the extension is in development mode.\nconst isDevMode = !('update_url' in chrome.runtime.getManifest());\n\nexport const log = (...args) => {\n  if (!isDevMode) return;\n  const timestamp = new Date().toISOString();\n  console.log(`[B2D][DEBUG] ${timestamp}:`, ...args);\n}\n\nexport const logInfo = (...args) => {\n  if (!isDevMode) return;\n  const timestamp = new Date().toISOString();\n  console.info(`[B2D][INFO] ${timestamp}:`, ...args);\n}\n\nexport const logError = (...args) => {\n  if (!isDevMode) return;\n  const timestamp = new Date().toISOString();\n  console.error(`[B2D][ERROR] ${timestamp}:`, ...args);\n}\n","import { Release } from \"../app/release.js\";\nimport { Metadata } from \"../discogs/app/metadata.js\";\nimport { releaseToDiscogsCsv } from \"../discogs/modules/discogs.js\";\nimport { logStorage } from \"../modules/storage.js\";\nimport { log, logInfo } from \"../utils/console.js\";\n\nexport function setupConsole() {\n  initConsole((consoleCommand) => {\n    consoleCommand.addCommand('log.storage', () => { logStorage();});\n  })\n}\n\n/**\n * @param {Release} release\n */\nexport function setupConsoleRelease(release, keywordsMapping) {\n  initConsole((consoleCommand) => {\n    consoleCommand.addCommand('log.release', () => {\n      log('Release:', release)\n    });\n\n    consoleCommand.addCommand('log.keywordsMapping', () => {\n      log('Keywords mapping:', keywordsMapping);\n    });\n\n    const discogsCsv = releaseToDiscogsCsv(release);\n    consoleCommand.addCommand('log.discogsCsv', () => {\n      log('Discogs CSV:', discogsCsv);\n    });\n\n    const metadata = Metadata.fromRelease(release);\n    consoleCommand.addCommand('log.metadata', () => {\n      log('Release metadata:', metadata);\n    });\n  });\n}\n\nfunction initConsole(onInit) {\n  logInfo('Init console');\n\n  // TODO: find a better solution\n  // Wait for dashboard content load\n  const interval = 100;\n  const intervalId = setInterval(() => {\n    const consoleCommand = document.querySelector('console-command');\n    if (consoleCommand) {\n      onInit(consoleCommand);\n      logInfo('Console initialized');\n      clearInterval(intervalId);\n    }\n  }, interval);\n}\n","import { Release } from \"../app/release.js\";\nimport { getCurrentTab, getExtensionManifest } from \"../modules/chrome.js\";\nimport { loadDiscogsGenres } from \"../discogs/modules/genres.js\";\nimport { loadKeywordMapping } from \"../bandcamp/modules/mapping.js\";\nimport config from \"../config.js\";\nimport { setHistoryTabSearchValue, setupHistoryTab } from \"./tabs/history_tab.js\";\nimport { disable, enable, hide, show, click } from \"../modules/html.js\";\nimport { setupReleasesTab } from \"./tabs/releases_tab.js\";\nimport { setupReleaseTab } from \"./tabs/release_tab.js\";\nimport { setupCsvDataTab } from \"./tabs/csv_data_tab.js\";\nimport { getStorageSize } from \"../modules/storage.js\";\nimport { bytesToSize } from \"../modules/utils.js\";\nimport { setupConsole, setupConsoleRelease } from \"./console.js\";\nimport { isValidBandcampURL } from \"../bandcamp/modules/html.js\";\nimport { isValidDiscogsReleaseEditUrl } from \"../discogs/app/utils.js\";\nimport { logInfo } from \"../utils/console.js\";\n\nconst btnDashboardTab = document.getElementById(\"dashboard-tab\");\nconst btnReleaseTab = document.getElementById(\"release-tab\");\nconst btnReleasesTab = document.getElementById(\"releases-tab\");\nconst btnCsvDataTab = document.getElementById('csvData-tab');\nconst btnHistoryTab = document.getElementById('history-tab');\nconst btnDownloadRelease = document.getElementById('downloadRelease');\nconst btnDownloadReleases = document.getElementById('downloadReleases');\nconst btnDownloadStorage = document.getElementById('downloadHistory');\nconst btnDiscogsSearchArtist = document.getElementById('discogsSearchArtist');\nconst tabReleases = document.getElementById('releases');\n\nasync function proceedBandcampData() {\n  logInfo('Proceed bandcamp data');\n\n  getCurrentTab().then((tab) => {\n    chrome.tabs.sendMessage(tab.id, { type: 'getBandcampData' }, (response) => {\n      if (response === null || typeof response === 'undefined' || Object.keys(response).length === 0 || typeof response.data === 'undefined') {\n        showBandcampDataNotFoundWarning();\n        return;\n      }\n\n      processBandcampResponse(response);\n    });\n  });\n}\n\nasync function proceedDiscogsEditPageData() {\n  logInfo('Proceed discogs edit page data');\n\n  getCurrentTab().then((tab) => {\n    chrome.tabs.sendMessage(tab.id, { type: 'getDiscogsEditPageData' }, (response) => {\n      if (response === null || typeof response === 'undefined' || Object.keys(response).length === 0 || typeof response.data === 'undefined') {\n        return;\n      }\n\n      processDiscogsDraftPageResponse(response);\n    });\n  });\n}\n\nfunction showBandcampDataNotFoundWarning() {\n  showDashboard();\n\n  // Wait for dashboard content load\n  const interval = 100;\n  const intervalId = setInterval(() => {\n    const warningBandcampDataNotFound = document.getElementById('b2d-warning-bandcamp-data-not-found');\n\n    if (warningBandcampDataNotFound) {\n      show(warningBandcampDataNotFound);\n      clearInterval(intervalId);\n    }\n  }, interval);\n}\n\nfunction showDashboard() {\n  disable(btnReleaseTab, btnCsvDataTab);\n  hide(btnReleasesTab);\n  show(btnDownloadReleases);\n  click(btnDashboardTab);\n}\n\nfunction processBandcampResponse(response) {\n  const isRelease = response.type === 'release';\n  const isList = response.type === 'list';\n\n  if (!isRelease && !isList) {\n    // todo: Show error?\n    return;\n  }\n\n  loadDiscogsGenres(config.genres_url).then(genres => {\n    loadKeywordMapping(config.keyword_mapping_url).then(keywordsMapping => {\n      if (isRelease) {\n        processBandcampReleaseData(response.data, keywordsMapping);\n      } else {\n        processBandcampReleasesData(response);\n      }\n    })\n  });\n}\n\nfunction processBandcampReleaseData(data, keywordsMapping) {\n  hide(btnReleasesTab);\n  show(btnReleaseTab);\n  click(btnReleaseTab);\n\n  try {\n    const release = Release.fromStorageObject(data);\n    setupConsoleRelease(release, keywordsMapping);\n    setupReleaseTab(\n      document.getElementById('release'),\n      release,\n      btnDownloadRelease,\n      btnDiscogsSearchArtist\n    );\n    setupCsvDataTab(release, btnCsvDataTab);\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction processBandcampReleasesData(response) {\n  hide(btnReleaseTab);\n  show(btnReleasesTab);\n  click(btnReleasesTab);\n\n  setupReleasesTab(\n    tabReleases,\n    response.data,\n    response.popup.imageSrc,\n    response.popup.search,\n    btnDownloadReleases\n  );\n}\n\nfunction processDiscogsDraftPageResponse(response) {\n  disable(btnReleaseTab, btnCsvDataTab);\n  hide(btnReleasesTab);\n  click(btnHistoryTab);\n  setHistoryTabSearchValue(response.data.artistName);\n}\n\nfunction replaceVersion(document) {\n  logInfo('Replace extension version');\n  const manifest = getExtensionManifest();\n\n  // Set extension version\n  document.querySelectorAll('.version').forEach(el => {\n    el.textContent = manifest.version;\n  });\n}\n\nfunction setupNavigation() {\n  logInfo('Setup navigation');\n\n  btnReleaseTab.addEventListener('click', () => {\n    hide(btnDownloadReleases, btnDownloadStorage);\n    show(btnDownloadRelease);\n    enable(btnCsvDataTab);\n  });\n  btnReleasesTab.addEventListener('click', () => {\n    hide(btnDownloadRelease, btnDownloadStorage);\n    show(btnDownloadReleases);\n    disable(btnCsvDataTab);\n\n    const releasesList = tabReleases.querySelector('releases-list');\n    releasesList.refreshStatus();\n  });\n  btnHistoryTab.addEventListener('click', () => {\n    hide(btnDownloadRelease, btnDownloadReleases);\n    show(btnDownloadStorage);\n    setupHistoryTab(\n      document.getElementById('history'),\n      btnDownloadStorage\n    );\n  });\n}\n\nfunction initialize(tab) {\n  const currentTabUrl = tab.url;\n\n  logInfo('Popup initialization');\n  logInfo('Current URL', currentTabUrl);\n\n  setupConsole();\n  setupNavigation();\n  replaceVersion(document);\n  checkStorageSize();\n  onExternalContentLoaded((e) => {\n    replaceVersion(e.target);\n  });\n\n  if (isValidBandcampURL(currentTabUrl)) {\n    proceedBandcampData();\n  } else if (isValidDiscogsReleaseEditUrl(currentTabUrl)) {\n    proceedDiscogsEditPageData();\n  } else {\n    showBandcampDataNotFoundWarning();\n  }\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  getCurrentTab().then((tab) => {\n    initialize(tab);\n  });\n});\n\nfunction checkStorageSize() {\n  logInfo('Check storage size');\n\n  getStorageSize(size => {\n    document.querySelectorAll('.storage-size').forEach(el => {\n      el.textContent = bytesToSize(size);\n      el.setAttribute('title', `Storage size (${size} bytes)`)\n    });\n  });\n}\n\n/**\n * Run some specific logic for external content\n */\nfunction onExternalContentLoaded(fn) {\n  const externalContentElements = document.querySelectorAll('external-content');\n  externalContentElements.forEach(el => {\n    el.addEventListener('externalContentLoaded', fn);\n  });\n}\n","import { getDataAttribute } from \"../../modules/html.js\";\nimport { removeInvisibleChars, trimCharactersFromString } from \"../../modules/utils.js\";\n\nexport function getMusicAlbumSchemaData() {\n  const jsonLdScript = document.querySelector('script[type=\"application/ld+json\"]');\n  return jsonLdScript ? JSON.parse(jsonLdScript.textContent) : null;\n}\n\nfunction extractDataFromMusicGridElement(element) {\n  let artist = element.querySelector('.artist-override')?.innerText;\n\n  if (!artist) {\n    artist = document.querySelector('#band-name-location .title').innerText;\n  }\n\n  artist = trimCharactersFromString(artist, \" \\-\\n\");\n  artist = removeInvisibleChars(artist);\n\n  const titleParts = element.querySelector('.title').innerText.split(\"\\n\");\n  const title = removeInvisibleChars(titleParts[0]);\n  const url = element.querySelector('a').getAttribute('href');\n\n  return {\n    artist: artist,\n    title: title,\n    url: (url[0] === '/' ? window.location.origin : '') + url,\n    item_id: getDataAttribute(element, 'item-id'),\n  }\n}\n\nexport function getReleasesData() {\n  const releases = [];\n  const releaseElements = document.querySelectorAll('#music-grid .music-grid-item');\n\n  releaseElements.forEach(element => {\n    const releaseData = extractDataFromMusicGridElement(element);\n    releases.push(releaseData);\n  });\n\n  return releases;\n}\n\nexport function getBandPhotoSrc() {\n  const imgBandPhoto = document.querySelector('.band-photo');\n  return imgBandPhoto.src;\n}\n\nexport function isValidBandcampURL(url) {\n  const bandcampUrl = 'bandcamp.com';\n  return url.includes(bandcampUrl);\n}\n"],"names":["byteToHex","i","push","toString","slice","uuid","test","TypeError","v","arr","Uint8Array","parseInt","f","s","x","y","z","ROTL","n","name","version","hashfunc","generateUUID","value","namespace","buf","offset","_namespace","str","unescape","encodeURIComponent","bytes","length","charCodeAt","stringToBytes","set","K","H","msg","Array","isArray","prototype","call","l","N","Math","ceil","M","Uint32Array","j","pow","floor","W","t","a","b","c","d","e","T","unsafeStringify","err","DNS","URL","v35","url","TrackTime","constructor","hours","minutes","seconds","this","date","toDate","Intl","DateTimeFormat","hour12","hour","minute","second","format","Date","setHours","setMinutes","setSeconds","fromString","timeString","Error","split","fromDuration","duration","exec","ReleaseItem","artist","title","fromObject","obj","releaseItem","label","published","modified","tracks","tracksQty","image","keywords","datePublished","dateModified","toStorageObject","toISOString","map","track","fromStorageObject","trackData","Track","num","time","transliterationMap","capitalizeEachWord","word","charAt","toUpperCase","join","isString","Object","isEmptyArray","arrayToFlat","concat","arrayUnique","Set","template","replacements","key","hasOwnProperty","replace","removeLeadingZeroOrColon","async","getCurrentTab","callback","queryOptions","active","currentWindow","tab","chrome","tabs","query","getExtensionManifest","runtime","getManifest","chromeSendMessageToCurrentTab","message","responseCallback","then","sendMessage","id","genres","loadDiscogsGenres","fetch","response","json","data","catch","reason","mapping","getMapping","isEmptyObject","keywordMapping","Style","createMapping","style","_genre","genre","element","prop","includes","getPropertyByElement","loadKeywordMapping","genres_url","keyword_mapping_url","about_url","extension_url","discogs_search_artist_url","discogs_search_release_url","text","notes","discogsApi","consumerKey","keywordToDiscogsGenre","keyword","toLowerCase","keywordMapData","keywordsToDiscogsGenres","keywordToDiscogsStyles","keywordsToDiscogsStyles","getDiscogsDateValue","releaseToDiscogsCsv","release","DiscogsCsv","fromRelease","getSearchDiscogsReleaseUrl","Metadata","country","released","tracklist","credits","submissionNotes","trackQty","formatFileType","formatDescription","releaseUrl","self","manifest","fileType","qty","description","release_url","generateSubmissionNotes","publishedDate","modifiedDate","discogsGenres","discogsStyles","autoDetectedGenres","autoDetectedStyles","catno","styles","images","metadata","JSON","stringify","addGenre","addStyle","addTrack","getGenre","filter","getStyle","getDate","toCsvObject","hasDataAttribute","attributeName","hasAttribute","setDataAttribute","attributeValue","setAttribute","defaultValue","undefined","getAttribute","show","forEach","el","classList","remove","hide","add","disable","disabled","enable","click","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","input","triggerInputEvent","Event","createElementFromHTML","htmlString","tempDiv","document","createElement","innerHTML","trim","firstChild","createIconLink","className","href","onClick","iconDefault","iconOnClick","iconOnClickTimeout","link","target","addEventListener","preventDefault","eventReturn","icon","querySelector","setIcon","setTimeout","ReleasesList","HTMLElement","super","stateButtons","statusElements","selectAllCheckboxId","getPrefixed","searchInputId","sortingId","appendChild","content","cloneNode","selectAllCheckbox","selectAllCheckboxes","checked","table","type","selectCheckbox","refreshStatus","searchInput","getElementById","querySelectorAll","row","textContent","sortingUl","sortingBtn","option","sortingItem","attr","compType","dir","rows","from","isComparingInt","sort","localeCompare","tBodies","sortTable","setupSortingButton","setupSorting","setSearchValue","refreshSearchStatus","focus","updateButtonsState","refreshItemsStatus","total","selected","getSelectedValues","filtered","statusText","RegExp","addStatusElement","getPrefix","appendButton","button","controlButtons","addStateButton","btn","checkbox","contains","tr","closest","connectedCallback","dataAttr","parse","populateData","tableBody","item","index","checkboxId","dataAtts","controlsEl","controls","control","getCheckboxes","onlyChecked","getSelectedTitles","nextElementSibling","updateButtonState","checkboxes","anyCheckboxChecked","some","objectsToCsv","objects","headers","keys","csvRows","values","header","downloadCsv","csv","csvFileName","blob","Blob","createObjectURL","download","char","revokeObjectURL","customElements","get","define","storage","local","findReleasesByUrls","urls","onFind","generateKeysFromUrls","result","releases","error","console","log","clearStorageByKey","onDone","k","lastError","objectToHtmlElement","createTextNode","entries","keyCell","valueCell","outerHTML","populateReleasesList","releasesList","applyMetadataLink","transformReleaseItemsToReleaseListData","setBackgroundImage","imageUrl","backgroundImage","setButtonInLoadingState","removeButtonLoadingState","setupHistoryTab","btnDownloadCsv","getReleasesList","btnClearSelected","btnClearAll","bcLinks","firstRelease","updateReleasesListData","clear","setupReleasesList","keywordsMapping","downloadReleasesCsv","waitForBandcampData","close","countLinesInHtmlElement","divHeight","offsetHeight","lineHeight","getComputedStyle","round","setupCsvDataTab","btnCsvData","csvDataTabPane","headline","headlineEl","innerText","appendObjectDataAsTable","isDevMode","args","timestamp","logInfo","info","initConsole","onInit","intervalId","setInterval","consoleCommand","clearInterval","btnDashboardTab","btnReleaseTab","btnReleasesTab","btnCsvDataTab","btnHistoryTab","btnDownloadRelease","btnDownloadReleases","btnDownloadStorage","btnDiscogsSearchArtist","tabReleases","proceedBandcampData","isRelease","isList","addCommand","discogsCsv","setupConsoleRelease","btnDiscogsSearch","releaseArtist","releaseTitle","releaseDate","releaseTracks","getFullYear","countArtistLines","countTitleLines","toggle","outputRelease","setupReleaseTab","processBandcampReleaseData","releasesData","bgImageSrc","searchValue","btnNavDownload","checkedUrls","tabPromises","tabPromise","Promise","resolve","create","all","openTabs","scripting","executeScript","tabId","func","releaseItems","activeTab","sendSearchMessageToTab","search","selectedValue","setupReleasesTab","popup","imageSrc","processBandcampReleasesData","processBandcampResponse","showBandcampDataNotFoundWarning","warningBandcampDataNotFound","replaceVersion","initialize","currentTabUrl","callable","fn","size","bytesToSize","getBytesInUse","artistName","processDiscogsDraftPageResponse","proceedDiscogsEditPageData"],"sourceRoot":""}